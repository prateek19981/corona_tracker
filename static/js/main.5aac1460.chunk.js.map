{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/index.js","App.js","index.js","components/CountryPicker/CountryPicker.jsx","App.module.css","i18n.js","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css"],"names":["module","exports","container","card","infected","recovered","deaths","url","fetchData","_ref","Object","E_nodeworkspace_covid_tracker_covidtracker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_nodeworkspace_covid_tracker_covidtracker_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","country","_response","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","t0","console","log","stop","_x","apply","this","arguments","fetchDailyData","_ref2","_callee2","_yield$axios$get","data","modifiedData","_context2","map","confirmed","total","date","reportDate","fetchCountries","_ref3","_callee3","_yield$axios$get2","countries","item","_context3","name","options","weekday","year","month","day","Cards","props","react_default","createElement","className","styles","Grid","spacing","justify","component","Card","xs","md","cx","CardContent","Typography","color","gutterBottom","i18n","t","variant","build_default","start","end","value","duration","separator","Date","lastUpdate","toLocaleDateString","Chart","_useState","useState","_useState2","slicedToArray","dailyData","setDailyData","useEffect","asyncToGenerator","regenerator_default","t1","fetchAPI","dailydata","labels","datasets","label","borderColor","fill","_ref4","backgroundColor","lineChart","es","barChart","require","default","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","_yield$fetchData","_yield$fetchData$data","setState","handleChangeLang","state","changeLanguage","handleChange","_this$state","Button","button","onClick","components_Cards_Cards","CountryPicker","onChangeCountry","components_Chart_Chart","React","Component","ReactDom","render","I18nextProvider","src_App","document","getElementById","E_nodeworkspace_covid_tracker_covidtracker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setCountries","getCountries","react__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","formControl","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","defaultValue","onChange","e","target","i","key","IMG","i18next__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","i18next_browser_languagedetector__WEBPACK_IMPORTED_MODULE_1__","use","LanguageDetector","init","resources","en","translations","Infected","number of active cases of covid-19","Recovered","number of recovered cases of covid-19","Deaths","number of deaths from covid-19","en-US","Change Language","Covid - 19","Global","hin","Number of active cases of covid19","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait"],"mappings":"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","file":"static/js/main.5aac1460.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3rUq0\",\"card\":\"Cards_card__2JsrA\",\"infected\":\"Cards_infected__1TAy7\",\"recovered\":\"Cards_recovered__25Mrb\",\"deaths\":\"Cards_deaths__3KM-8\"};","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    const temp_url = url;\r\n\r\n    try{\r\n          \r\n        if(country){\r\n            const response = await axios.get(`${url}/countries/${country}`);\r\n            return response;\r\n        }\r\n        \r\n        const response = await axios.get(url);\r\n        return response;\r\n\r\n\r\n    }catch(err){\r\n        console.log(\"error in getting data\",err);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        \r\n\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((data)=>\r\n          \r\n             ({\r\n                confirmed:data.confirmed.total,\r\n                deaths:data.deaths.total,\r\n                date:data.reportDate\r\n             }) );\r\n\r\n        return modifiedData;\r\n\r\n        \r\n    \r\n        \r\n\r\n\r\n    }catch(err)\r\n    {\r\n        console.log(\"error in getting daily data\",err);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async() =>{\r\n    try{\r\n\r\n        const { data:{countries} } = await axios.get(`${url}/countries`);\r\n        const item = countries.map((country)=>{\r\n            return country.name;\r\n\r\n        });\r\n        return item;\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup'; \r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from '../../i18n';\r\n\r\n\r\nvar options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\nconst Cards = (props)=>{\r\n\r\n    \r\n    \r\n    if(!props.data.confirmed)\r\n    {\r\n        return <h1>Loading.....</h1>;\r\n    }\r\n    return (\r\n     <div className={styles.container}>\r\n        <Grid container spacing={3} justify={\"center\"}>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>{i18n.t(\"Infected\")}</Typography>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        <CountUp\r\n                          start={0}\r\n                          end={props.data.confirmed.value}\r\n                          duration={2.5}\r\n                          separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" gutterBottom>{new Date(props.data.lastUpdate).toLocaleDateString(i18n.t(\"en-US\"),options)}</Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>{i18n.t(\"Number of active cases of covid19\")}</Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n            </Grid> \r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>{i18n.t(\"Recovered\")}</Typography>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        <CountUp\r\n                          start={0}\r\n                          end={props.data.recovered.value}\r\n                          duration={2.5}\r\n                          separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" gutterBottom>{new Date(props.data.lastUpdate).toLocaleDateString(i18n.t(\"en-US\"),options)}</Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>{i18n.t(\"number of recovered cases of covid-19\")}</Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n            </Grid> \r\n            <Grid item component={Card} xs = {12} md ={3} className={cx(styles.card,styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>{i18n.t(\"Deaths\")}</Typography>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        <CountUp\r\n                          start={0}\r\n                          end={props.data.deaths.value}\r\n                          duration={2.5}\r\n                          separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" gutterBottom>{new Date(props.data.lastUpdate).toLocaleDateString(i18n.t(\"en-US\"),options)}</Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>{i18n.t(\"number of deaths from covid-19\")}</Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n            </Grid> \r\n\r\n\r\n\r\n        </Grid>\r\n\r\n     </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Cards;","import React , {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from '../../i18n';\r\n\r\n\r\n\r\n\r\nconst Chart = (props)=>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n      \r\n    useEffect(()=>{\r\n    \r\n        const fetchAPI = async ()=>{\r\n            setDailyData(await fetchDailyData());\r\n\r\n        }\r\n\r\n        fetchAPI();\r\n        \r\n        console.log(\"daily data\",dailyData);\r\n\r\n\r\n    },[]);\r\n\r\n    const { data,country } = props\r\n    \r\n        \r\n    const dailydata = {\r\n        \r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{ \r\n            data: dailyData.map(({confirmed}) => confirmed),\r\n            label: `${ i18n.t(\"Infected\")}` ,\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: `${ i18n.t(\"Deaths\")}`,\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n                },\r\n            ],\r\n            \r\n        }\r\n\r\n        const lineChart = (\r\n            dailyData[0]?\r\n                (<Line\r\n                    data={dailydata}\r\n                />):null\r\n            )\r\n\r\n    \r\n        const barChart = (\r\n            data.confirmed?\r\n            (\r\n                <Bar\r\n                    data={{\r\n                        labels:[`${ i18n.t(\"Infected\")}`,`${ i18n.t(\"Recovered\")}`,`${ i18n.t(\"Deaths\")}`],\r\n                        datasets:[{\r\n                            label:\"\",\r\n                            backgroundColor:[\r\n                               'rgba(0,0,255,0.5)',\r\n                                'rgba(0,255,0,0.5)',\r\n                                'rgba(255,0,0,0.5)'\r\n\r\n                            ],\r\n                            data:[data.confirmed.value,data.recovered.value,data.deaths.value] \r\n\r\n                        }]\r\n\r\n                    }}\r\n                />\r\n            ):null\r\n\r\n        )\r\n\r\n        \r\n\r\n     \r\n\r\n    \r\n    // const lineChart = (\r\n    //     dailyData.length ? (\r\n            \r\n    //       <Line\r\n    //         data={{\r\n    //           labels: dailyData.map(({ date }) => date),\r\n    //           datasets: [{ \r\n    //             data: dailyData.map((data) => data.confirmed),\r\n    //             label: 'Infected',\r\n    //             borderColor: '#3333ff',\r\n    //             fill: true,\r\n    //             }, {\r\n    //                 data: dailyData.map((data) => data.deaths),\r\n    //                 label: 'Deaths',\r\n    //                 borderColor: 'red',\r\n    //                 backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n    //                 fill: true,\r\n    //                },\r\n    //             ],\r\n              \r\n    //         }}\r\n    //        />\r\n    //     ) : null\r\n    //   );\r\n\r\n  \r\n      \r\n    return (\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n           \r\n            \r\n        </div>\r\n        \r\n      \r\n    )\r\n\r\n    }\r\n\r\n\r\n    export default Chart;\r\n       \r\n\r\n//export default Chart;","const { default: CountryPicker } = require(\"./CountryPicker/CountryPicker\");\r\n\r\nexport {default as Cards} from './Cards/Cards';\r\n\r\nexport {default as Chart} from './Chart/Chart';\r\n\r\nexport {default as CountryPicker} from './CountryPicker/CountryPicker';\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api'\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from './i18n';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nclass App extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n            data:{},\r\n            country:'',\r\n            value:\"en\"\r\n\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    componentDidMount = async () => \r\n    {\r\n        \r\n        const { data:{confirmed , deaths, lastUpdate,recovered} } = await fetchData();\r\n        const modifiedData = {\r\n            confirmed,\r\n            deaths,\r\n            lastUpdate,\r\n            recovered\r\n\r\n        }\r\n        console.log(\"data\",modifiedData)\r\n        this.setState({\r\n            data:modifiedData\r\n        })\r\n        \r\n    }\r\n\r\n    handleChangeLang = () =>\r\n    {\r\n        console.log(\"clciked\");\r\n        if(this.state.value===\"en\")\r\n        {\r\n            this.setState({\r\n                value:\"hin\"  \r\n            })\r\n            i18n.changeLanguage(\"hin\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                value:\"en\"  \r\n            })\r\n            i18n.changeLanguage(\"en\");\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = async (country) =>\r\n    {\r\n        \r\n        const data = await fetchData(country);\r\n\r\n        console.log(\"data after clivk\",data);\r\n        this.setState({\r\n            data:data.data,\r\n            country:country\r\n        })\r\n\r\n    }\r\n    render(){\r\n        const { data,country } = this.state;\r\n        return (\r\n            \r\n            <div className={styles.container}>\r\n                <Button variant=\"contained\" color=\"primary\" className={styles.button} onClick={this.handleChangeLang}>\r\n                    {i18n.t(\"Change Language\")}\r\n                </Button>\r\n                <h1>{i18n.t(\"Covid - 19\")}</h1>\r\n                <Cards data={data}/>\r\n                <CountryPicker onChangeCountry={this.handleChange}/>\r\n                <Chart data={data} country={country} />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from './i18n';\r\n\r\nReactDom.render(<I18nextProvider i18n={i18n}>\r\n      <App />\r\n    </I18nextProvider>, document.getElementById('root'));\r\n\r\n","import React,{ useEffect,useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\nimport i18n from '../../i18n';\r\n\r\n\r\nconst CountryPicker = (props)=>{\r\n    const [countries,setCountries] = useState([]);\r\n    useEffect(()=>{\r\n\r\n        const getCountries = async ()=>{\r\n            setCountries(await fetchCountries());\r\n\r\n        }\r\n\r\n        getCountries();\r\n        \r\n\r\n    },[setCountries]);\r\n    console.log(\"countries\",countries);\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            \r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>{\r\n                props.onChangeCountry(e.target.value);\r\n\r\n            }}>\r\n                <option value=\"\">{i18n.t(\"Global\")}</option>\r\n                {countries.map((country,i)=>{\r\n                    return (<option key={i} value={country}>{country}</option>); \r\n\r\n\r\n                })}\r\n                 \r\n\r\n\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default CountryPicker;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3I-oL\",\"IMG\":\"App_IMG__1vZC3\",\"button\":\"App_button__1br3X\"};","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(LanguageDetector).init({\r\n  // we init with resources\r\n  resources: {\r\n    en: {\r\n      translations: {\r\n        \"Infected\": \"Infected\",\r\n        \"number of active cases of covid-19\":\"number of active cases of covid-19\",\r\n        \"Recovered\":\"Recovered\",\r\n        \"number of recovered cases of covid-19\":\"number of recovered cases of covid-19\",\r\n        \"Deaths\":\"Deaths\",\r\n        \"number of deaths from covid-19\":\"number of deaths from covid-19\",\r\n        \"en-US\":\"en-US\",\r\n        \"Change Language\":\"Change Language\",\r\n        \"Covid - 19\":\"Covid - 19\",\r\n        \"Global\":\"Global\"\r\n         \r\n      }\r\n    },\r\n   \r\n\r\n    hin: {\r\n      translations: {\r\n        \"Infected\": \"संक्रमित\",\r\n        \"Number of active cases of covid19\":\"कोविद-१९ के सक्रिय मामलों की संख्या\",\r\n        \"Recovered\":\"ठीक हो चुके \",\r\n        \"number of recovered cases of covid-19\":\"कोविद-१९ से ठीक हो चुके लोगों की संख्या \",\r\n        \"Deaths\":\"मौतें\",\r\n        \"number of deaths from covid-19\":\"कोविद-१९ से मरने वालों की संख्या\",\r\n        \"en-US\":\"hi-IN\",\r\n        \"Change Language\":\"भाषा बदलो\",\r\n        \"Covid - 19\":\"कोविद-१९\",\r\n        \"Global\":\"वैश्विक\"\r\n      }\r\n    }\r\n\r\n  \r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: true,\r\n\r\n  // have a common namespace used around the full app\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n\r\n  keySeparator: false, // we use content as keys\r\n\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n    formatSeparator: \",\"\r\n  },\r\n\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nexport default i18n;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__vnv_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1WtDI\"};"],"sourceRoot":""}